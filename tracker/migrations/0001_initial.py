# Generated by Django 4.2.7 on 2025-08-14 20:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Product name', max_length=200)),
                ('url', models.URLField(help_text='Product URL from Amazon/Flipkart', validators=[django.core.validators.URLValidator()])),
                ('current_price', models.DecimalField(blank=True, decimal_places=2, help_text='Current price of the product', max_digits=10, null=True)),
                ('currency', models.CharField(default='INR', help_text='Currency code', max_length=3)),
                ('alert_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Price threshold for alerts', max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether to track this product')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_scraped', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('partial', 'Partial Success')], max_length=20)),
                ('scraped_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Response time in seconds', null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_logs', to='tracker.product')),
            ],
            options={
                'verbose_name': 'Scraping Log',
                'verbose_name_plural': 'Scraping Logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceAlert',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('price_drop', 'Price Drop'), ('price_increase', 'Price Increase'), ('demand_spike', 'Demand Spike')], default='price_drop', max_length=20)),
                ('threshold_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('triggered', 'Triggered'), ('disabled', 'Disabled')], default='active', max_length=20)),
                ('email_notification', models.BooleanField(default=True)),
                ('web_notification', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('triggered_at', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='tracker.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Price Alert',
                'verbose_name_plural': 'Price Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('source', models.CharField(default='scraper', help_text='Source of price data', max_length=50)),
                ('is_valid', models.BooleanField(default=True, help_text='Whether this price data is valid')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='tracker.product')),
            ],
            options={
                'verbose_name': 'Price History',
                'verbose_name_plural': 'Price History',
                'ordering': ['-recorded_at'],
                'unique_together': {('product', 'recorded_at')},
            },
        ),
        migrations.CreateModel(
            name='DemandPrediction',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('predicted_demand', models.FloatField(help_text='Predicted demand score')),
                ('predicted_price', models.DecimalField(blank=True, decimal_places=2, help_text='Predicted price', max_digits=10, null=True)),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence score for the prediction (0-1)', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('prediction_date', models.DateField(help_text='Date for which prediction is made')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model_type', models.CharField(default='linear_regression', help_text='Type of ML model used for prediction', max_length=50)),
                ('model_version', models.CharField(default='1.0', max_length=20)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demand_predictions', to='tracker.product')),
            ],
            options={
                'verbose_name': 'Demand Prediction',
                'verbose_name_plural': 'Demand Predictions',
                'ordering': ['-prediction_date'],
                'unique_together': {('product', 'prediction_date', 'model_type')},
            },
        ),
    ]
